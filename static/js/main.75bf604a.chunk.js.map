{"version":3,"sources":["router/notfound.js","pages/MuiSlider.js","data/data.js","pages/GoogleMapsStyles.js","pages/Map.js","pages/Plot.js","pages/TreeMap.js","router/Routing.js","App.js","serviceWorker.js","index.js"],"names":["Notfound","useStyles","makeStyles","theme","root","width","margin","height","spacing","body","fontWeight","fontSize","paddingLeft","paddingRight","MuiSlider","props","classes","marks","dates","i","length","push","value","label","slice","getMarks","Grid","container","direction","alignItems","justify","Box","Typography","id","gutterBottom","className","question","Slider","defaultValue","valueLabelFormat","findIndex","mark","getAriaValueText","aria-labelledby","step","min","max","valueLabelDisplay","onChange","ThemeContext","React","createContext","styles","test_country_data","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","defaultOptions","map","country","key","position","color","strokeColor","strokeWeight","text","String","Plotter","context","formatData","granularity","query","data","DATA","graphData","lines","includes","curr","j","x","y","Math","log","parseInt","graph","state","formatted","setState","series","curve","curveCatmullRom","alpha","toGraph","prevProps","this","console","item","xs","Wrapper","left","bottom","style","stroke","tickFormat","v","tickLabelAngle","title","line","ticks","fill","items","Component","contextType","Styled","section","COLORS","TreeMap","_getColor","floor","random","getData","week","DELTAS","leaves","cases","name","size","border","children","changeData","delta","hoveredNode","pop","prevState","treemapData","dataset","row","unshift","col","res","round","useCirclePacking","treeProps","animation","damping","stiffness","onLeafMouseOver","onLeafMouseOut","onLeafClick","mode","getLabel","event","newValue","Button","variant","button","marginLeft","onClick","disabled","float","colorType","sortFunction","a","b","withStyles","Routing","exact","path","component","App","loaded","Papa","parse","download","complete","continent","Provider","backgroundColor","paddingBottom","AppBar","Toolbar","flex","activeClassName","to","type","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uWAIeA,EAFE,kBAAM,0C,mCCKjBC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,KAETC,OAAQ,CACNC,OAAQJ,EAAMK,QAAQ,IAExBC,KAAM,CACJC,WAAY,OACZC,SAAU,GACVC,YAAa,GACbC,aAAc,QAeH,SAASC,EAAUC,GAChC,IAAMC,EAAUf,IACVgB,EAbR,SAAkBC,GAEhB,IADA,IAAID,EAAQ,GACHE,EAAI,EAAGA,EAAID,EAAME,OAAS,EAAGD,IAClCF,EAAMI,KAAK,CACTC,MAAOH,EACPI,MAAQJ,EAAI,IAAM,EAAKD,EAAMC,EAAI,GAAGK,MAAM,GAAI,GAAK,KAGzD,OAAOP,EAKOQ,CAASV,EAAMG,OAE7B,OACE,6BACE,6BACA,kBAACQ,EAAA,EAAD,CACEC,WAAS,EACTnB,QAAS,EACToB,UAAU,SACVC,WAAW,SACXC,QAAQ,UAER,kBAACC,EAAA,EAAD,CAAK1B,MAAM,OACT,kBAAC2B,EAAA,EAAD,CAAYC,GAAG,2BAA2BC,cAAY,EAACC,UAAWnB,EAAQP,MACvEM,EAAMqB,UAET,kBAACC,EAAA,EAAD,CACEC,aAAc,EACdC,iBAAkB,SAACjB,GAAD,OAAWL,EAAMuB,WAAU,SAAAC,GAAI,OAAIA,EAAKnB,QAAUA,KAAS,GAC7EoB,iBAAkB,SAACpB,GAAD,gBAAcA,IAChCqB,kBAAgB,2BAChBC,KAAM,EACNC,IAAK,EACLC,IAAK/B,EAAMG,MAAME,OAAS,EAC1B2B,kBAAkB,OAClB9B,MAAOA,EACP+B,SAAUjC,EAAMiC,cC3D5B,IAAI9B,EAAQ,CAAC,YAAa,WAAY,YAAa,YAAa,YAAa,WAAY,WAAY,YAAa,YAAa,YAAa,WAAY,YAAa,YAAa,YAAa,WAAY,YAAa,YAAa,YAAa,WAAY,WAAY,YAAa,YAAa,YAAa,WAAY,YAAa,YAAa,YAAa,WAAY,YAAa,YAAa,YAAa,YAAa,WAAY,aAE1a+B,EAAeC,IAAMC,cAAc,GC0W1BC,EA9WF,CACT,CACE,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,qBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,yBACf,YAAe,kBACf,QAAW,CACT,CACE,MAAS,WAEX,CACE,OAAU,KAIhB,CACE,YAAe,6BACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,0BACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,8BACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,0BACf,YAAe,kBACf,QAAW,CACT,CACE,MAAS,WAEX,CACE,UAAa,IAEf,CACE,OAAU,KAIhB,CACE,YAAe,qBACf,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,qBACf,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,oBACf,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,oBACf,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,MACf,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,MACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,iBACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,eACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,iBACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,WACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,WACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,uBACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,aACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,qBACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,OACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,OACf,YAAe,kBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,OACf,YAAe,SACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,OACf,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,OACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,gBACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,eACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,eACf,YAAe,kBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,eACf,YAAe,SACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,eACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,aACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,UACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,UACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,kBACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,QACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,QACf,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,QACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,QACf,YAAe,qBACf,QAAW,CACT,CACE,MAAS,cCjWbC,EAAoB,CAAC,CAAC,gBAAiB,UAAY,UAAW,KAAM,CAAC,SAAU,WAAY,WAAY,OAmC1FC,uBAAaC,yBA9BhC,WACE,OACE,kBAAC,YAAD,CACEC,YAAa,EACbC,cAAe,CAAEC,IAAK,UAAWC,KAAM,YACvCC,eAAgB,CACdR,OAAQA,IAGTC,EAAkBQ,KAAI,SAACC,GAAD,OACrB,kBAAC,SAAD,CACEC,IAAKD,EAAQ,GACbE,SAAY,CACVN,IAAKI,EAAQ,GACbH,IAAKG,EAAQ,IAEfvC,MAAO,CACL0C,MAAO,UACPC,YAAa,UACbC,aAAc,EACdzD,WAAY,OACZC,SAAU,OACVyD,KAAMC,OAAOP,EAAQ,e,qpCC1BZQ,E,kDAGnB,WAAYvD,EAAOwD,GAAU,IAAD,8BAC1B,cAAMxD,IAkBRyD,WAAa,SAACC,EAAaC,GAIzB,IAHA,IAAIC,EAAO,EAAKC,KAAKH,GACfI,EAAY,GACZC,EAAQ,GACL3D,EAAI,EAAGA,EAAIwD,EAAKvD,OAAQD,IAC/B,GAAoB,IAAhBsD,GAAsBA,EAAc,GAAKC,EAAMA,EAAMtD,OAAS,GAAG2D,SAASJ,EAAKxD,GAAG,IAAM,CAE1F,IADA,IAAI6D,EAAO,GACFC,EAAIR,EAAc,EAAGQ,EAAIN,EAAKxD,GAAGC,OAAQ6D,IAChDD,EAAK3D,KAAK,CACR6D,EAAGD,EACHE,EAAGC,KAAKC,IAAIC,SAASX,EAAKxD,GAAG8D,IAAM,KAGvCJ,EAAUxD,KAAK2D,GACfF,EAAMzD,KAAKsD,EAAKxD,GAAGsD,IAGvB,MAAO,CAACK,EAAOD,IApCW,EAuC5BU,MAAQ,SAACd,EAAaC,GACpB,GAAI,EAAKc,MAAMf,cAAgBA,EAA/B,CAGA,IAAIgB,EAAY,EAAKjB,WAAWC,EAAaC,GAK7C,OAHA,EAAKgB,SAAS,CACZZ,MAAOW,EAAU,KAEZA,EAAU,GAAG5B,KAAI,SAAC8B,EAAQxE,GAAT,OACtB,kBAAC,IAAD,CAAYgB,UAAU,SAAS4B,IAAK5C,EAClCyE,MAAOC,IAAgBC,MAAM,IAC7BnB,KAAMc,EAAU,GAAGtE,UAjDvB,EAAKyD,KAAOL,EAAQI,KACpB,EAAKzD,MAAQA,EAAMM,QACnB,EAAKN,MAAMG,KAAK,aAChB,EAAKH,MAAMG,KAAK,aAChB,EAAKmE,MAAQ,GAEb,EAAKO,QAAU,EAAKR,MAAM,EAAKxE,MAAM0D,YAAa,EAAK1D,MAAM2D,OARnC,E,+DAWTsB,GACbA,EAAUvB,cAAgBwB,KAAKlF,MAAM0D,cACvCwB,KAAKF,QAAUE,KAAKV,MAAMU,KAAKlF,MAAM0D,YAAawB,KAAKlF,MAAM2D,OAC7DwB,QAAQb,IAAI,c,+BAwCN,IAAD,OACP,OACE,kBAAC3D,EAAA,EAAD,CAAMC,WAAS,EAACnB,QAAS,EAAGsB,QAAQ,SAASD,WAAW,UACtD,kBAACH,EAAA,EAAD,CAAMyE,MAAI,EAACC,GAAI,GACb,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAQhG,MAAO,IAAKE,OAAQ,IAAKD,OAAQ,CAAEgG,KAAM,GAAIC,OAAQ,KAC3D,kBAAC,IAAD,CAAqBC,MAAO,CAAEC,OAAQ,aACtC,kBAAC,IAAD,CAAmBD,MAAO,CAAEC,OAAQ,aACpC,kBAAC,IAAD,CACEC,WAAY,SAAAC,GAAC,OAAI,EAAKzF,MAAMyF,GAAGnF,MAAM,GAAI,IAAIoF,gBAAiB,GAC9DC,MAAM,sBACNL,MAAO,CACLM,KAAM,CAAEL,OAAQ,WAChBM,MAAO,CAAEN,OAAQ,WACjBrC,KAAM,CAAEqC,OAAQ,OAAQO,KAAM,UAAWtG,WAAY,QAGzD,kBAAC,IAAD,CAAOmG,MAAM,kCAEZZ,KAAKF,WAKZ,kBAACrE,EAAA,EAAD,CAAMyE,MAAI,EAACC,GAAI,IACf,kBAAC1E,EAAA,EAAD,CAAMyE,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAqB7F,OAAQ,IAAKF,MAAO,IAAK4G,MAAOhB,KAAKT,MAAMV,MAAQmB,KAAKT,MAAMV,MAAQ,W,GAnFhE5B,IAAMgE,WAAtB5C,EACZ6C,YAAclE,EA0FvB,IAAMoD,EAAUe,IAAOC,QAAV,K,iBCzEPC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAQjEC,E,kDAGJ,WAAYxG,EAAOwD,GAAU,IAAD,uBAC1B,cAAMxD,IAqCRyG,UAAY,WACV,OAAOF,EAAOlC,KAAKqC,MAAMrC,KAAKsC,SAAWJ,EAAOlG,UAvCtB,EA2C5BuG,QAAU,SAAClD,EAAamD,GAGtB,IAFA,IAAIjD,EAAO,EAAKa,MAAQ,EAAKqC,OAAOpD,GAAe,EAAKoD,OAAO,GACzDC,EAAS,GACN3G,EAAI,EAAGA,EAAIwD,EAAKvD,OAAQD,IAC/B,GAAoB,IAAhBsD,GAAsBA,EAAc,GAAK,EAAKe,MAAMd,MAAM,EAAKc,MAAMd,MAAMtD,OAAS,GAAG2D,SAASJ,EAAKxD,GAAG,IAAM,CAChH,IAAI4G,EAAQpD,EAAKxD,GAAG,EAAIsD,EAAcmD,GAEtC,GAAa,MAATG,GAA2B,IAAVA,GAAyB,MAAVA,EAClC,SAGFD,EAAOzG,KAAK,CACV2G,KAAMrD,EAAKxD,GAAGsD,GAAe,KAAOsD,EAAQ,IAC5CE,KAAM7C,KAAKC,IAAI0C,EAAQ,GAAK,GAC5B9D,MAAO,EAAKuD,YACZhB,MAAO,CACL0B,OAAQ,qBAKhB,MAAO,CACLrB,MAAO,GACP5C,MAAO,EAAKuD,YACZW,SAAUL,IAnEc,EAuE5BM,WAAa,SAACC,EAAOC,GAEdD,EAAQ,GAAgC,IAA3B,EAAK7C,MAAMf,aAAuB4D,EAAQ,GAAK,EAAK7C,MAAMf,cAAgB,EAAKoD,OAAOzG,OAAS,IAK7GiH,EAAQ,GAAKC,EACf,EAAK9C,MAAMd,MAAMrD,KAAKiH,EAAY3D,KAAKqD,MAEvC,EAAKxC,MAAMd,MAAM6D,MAInB,EAAK7C,UAAS,SAAC8C,GACb,MAAO,CACL/D,YAAa+D,EAAU/D,YAAc4D,EACrCI,YAAa,EAAKd,QAAQa,EAAU/D,YAAc4D,EAAOG,EAAUZ,YAtFvE,EAAKhD,KAAOL,EAAQI,KACpB,EAAKkD,OAAS,CAAC,GAAI,IACnB,IAAK,IAAIa,EAAU,EAAGA,EAAU,EAAGA,IACjC,IAAK,IAAIC,EAAM,EAAGA,EAAM,EAAK/D,KAAK8D,GAAStH,OAAQuH,IAAO,CAExD,EAAKd,OAAOa,GAASrH,KAAK,CAAC,EAAKuD,KAAK8D,GAASC,GAAKD,KACnC,IAAZA,GACF,EAAKb,OAAOa,GAASC,GAAKC,QAAQ,CAAC,EAAKhE,KAAK8D,GAASC,GAAK,KAG7D,IAAK,IAAIE,EAAM,EAAIH,EAASG,EAAM,EAAKjE,KAAK8D,GAASC,GAAKvH,OAAQyH,IAAO,CACvE,IAAI7D,EAAO,EAAKJ,KAAK8D,GAASC,GAAKE,GAAO,EAAKjE,KAAK8D,GAASC,GAAKE,EAAM,GACpEC,EAAM,EAERA,EADW,IAAT9D,EACI,EACwC,MAArC,EAAKJ,KAAK8D,GAASC,GAAKE,EAAM,GACjC,EAEAzD,KAAK2D,MAAM/D,EAAO,EAAKJ,KAAK8D,GAASC,GAAKE,EAAM,GAAK,KAAO,IAEpE,EAAKhB,OAAOa,GAASC,GAAKtH,KAAKyH,IAtBX,OA2B1B5C,QAAQb,IAAI,EAAKwC,QACjB,EAAKrC,MAAQ,CACX8C,aAAa,EACbG,YAAa,EAAKd,QAAQ,EAAG,GAC7BqB,kBAAkB,EAClBvE,YAAa,EACbC,MAAO,GACPkD,KAAM,GAlCkB,E,qDA6FlB,IAAD,OACC5G,EAAYiF,KAAKlF,MAAjBC,QADD,EAEmCiF,KAAKT,MAAvC8C,EAFD,EAECA,YAAaU,EAFd,EAEcA,iBACfC,EAAY,CAChBC,UAAW,CACTC,QAAS,EACTC,UAAW,KAEbzE,KAAMsB,KAAKT,MAAMiD,YACjBY,gBAAiB,SAAAnE,GAAC,OAAI,EAAKQ,SAAS,CAAE4C,YAAapD,KACnDoE,eAAgB,kBAAM,EAAK5D,SAAS,CAAE4C,aAAa,KACnDiB,YAAa,kBAAM,EAAKnB,WAAW,EAAGE,IACtC/H,OAAQ,IACRiJ,KAAMvD,KAAKT,MAAMwD,iBAAmB,aAAe,WACnDS,SAAU,SAAAvE,GAAC,OAAIA,EAAE8C,MACjB3H,MAAO,KAET,OACE,yBAAK8B,UAAU,WACb,kBAACrB,EAAD,CAAWI,MAAOA,EAChB8B,SAAU,SAAC0G,EAAOC,GACZA,IAAa,EAAKnE,MAAMoC,MAC1B,EAAKlC,SAAS,CACZkC,KAAM+B,EACNlB,YAAa,EAAKd,QAAQ,EAAKnC,MAAMf,YAAakF,QAK1D,6BACA,kBAACjI,EAAA,EAAD,CAAMC,WAAS,EAACnB,QAAS,EAAGsB,QAAQ,SAASD,WAAW,UACtD,kBAACH,EAAA,EAAD,CAAMyE,MAAI,EAACC,GAAI,GACb,kBAACwD,EAAA,EAAD,CAAQC,QAAQ,YAAY5F,MAAM,UAAU9B,UAAWnB,EAAQ8I,OAAQtD,MAAO,CAAEuD,WAAY,SAC1FC,QAAS,kBAAM,EAAK5B,YAAY,EAAG,OAAO6B,SAAqC,IAA3BhE,KAAKT,MAAMf,aADjE,QAIA,kBAACmF,EAAA,EAAD,CAAQC,QAAQ,YAAY5F,MAAM,UAAU9B,UAAWnB,EAAQ8I,OAAQtD,MAAO,CAAE0D,MAAO,UACrFF,QAAS,kBAAM,EAAKtE,SAAS,CAAEsD,kBAAmBA,MAClD/C,KAAKT,MAAMwD,iBAAmB,cAAgB,eAEhD,kBAAC,IAAD,iBAAaC,EAAb,CAAwBkB,UAAU,UAAUC,aAAc,SAACC,EAAGC,GAAJ,OAAUA,EAAEhJ,MAAQ+I,EAAE/I,WAGlF,kBAACI,EAAA,EAAD,CAAMyE,MAAI,EAACC,GAAI,IACf,kBAAC1E,EAAA,EAAD,CAAMyE,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,CAAM3B,YAAawB,KAAKT,MAAMf,YAAaC,MAAOuB,KAAKT,MAAMd,UA3BnE,8JAiCE,6BAAM,6BAjCR,+DAmCE,6BAAM,6BAnCR,mD,GAlHgBxB,IAAMgE,WAAtBK,EACGJ,YAAclE,EA2JRsH,mBAlKA,SAAApK,GAAK,MAAK,CACvB2J,OAAQ,CACNxJ,OAAQH,EAAMK,QAAQ,OAgKX+J,CAAmBhD,GCnKnBiD,E,uKAbX,OACE,kBAAC,IAAD,KACE,yBAAKrI,UAAU,UACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsI,OAAK,EAACC,KAAK,IAAIC,UAAWpD,IACjC,kBAAC,IAAD,CAAOoD,UAAW3K,W,GAPRkD,IAAMgE,WC6Db0D,E,kDAvDb,aAAe,IAAD,8BACZ,gBACKhG,KAAO,GACZ,EAAKY,MAAQ,CACXqF,QAAQ,GAEVC,IAAKC,MAAM,iGAAkG,CAC3GC,UAAU,EACVC,SAAU,SAACC,GACTJ,IAAKC,MAAM,+FAAgG,CACzGC,UAAU,EACVC,SAAU,SAACnH,GACT,EAAKc,KAAKvD,KAAK6J,EAAUvG,KAAKnD,MAAM,IACpC,EAAKoD,KAAKvD,KAAKyC,EAAQa,KAAKnD,MAAM,IAClC,EAAKkE,SAAS,CAAEmF,QAAQ,UAdpB,E,qDAqBZ,OACE,kBAAC5H,EAAakI,SAAd,CAAuB7J,MAAO,CAC5BqD,KAAMsB,KAAKrB,OAEX,yBAAKzC,UAAU,MAAMqE,MAAO,CAAE4E,gBAAiB,UAAWC,cAAe,KACvE,kBAACC,EAAA,EAAD,CAAQtH,SAAS,UACf,kBAACuH,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,yBAAK/E,MAAO,CAAEgF,KAAM,EAAG7K,SAAU,SAAU,kBAAC,IAAD,CAAS8K,gBAAgB,SAAStJ,UAAU,OAAOuJ,GAAI,IAAKC,KAAK,QAAjE,mBAQjD,6BACA,kBAACjK,EAAA,EAAD,CACEC,WAAS,EACTnB,QAAS,EACToB,UAAU,SACVC,WAAW,SACXC,QAAQ,UAER,kBAACC,EAAA,EAAD,CAAK1B,MAAM,MAAMuL,SAAU,MACxB3F,KAAKrB,KAAKxD,OAAS,EAAI,kBAAC,EAAD,MAAc,W,GA/ClC8B,IAAMgE,WCLJ2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.75bf604a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Notfound = () => <h1>Not found</h1>;\r\n\r\nexport default Notfound","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 300,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n  body: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    paddingLeft: 70,\r\n    paddingRight: 70,\r\n  },\r\n}));\r\n\r\nfunction getMarks(dates) {\r\n  var marks = [];\r\n  for (var i = 0; i < dates.length - 1; i++) {\r\n      marks.push({\r\n        value: i,\r\n        label: (i % 2 === 0  ? dates[i + 1].slice(0, -5) : '')\r\n      });\r\n  }\r\n  return marks;\r\n}\r\n\r\nexport default function MuiSlider(props) {\r\n  const classes = useStyles();\r\n  const marks = getMarks(props.dates);\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <Box width=\"75%\">\r\n          <Typography id=\"discrete-slider-restrict\" gutterBottom className={classes.body}>\r\n            {props.question}\r\n          </Typography>\r\n          <Slider\r\n            defaultValue={0}\r\n            valueLabelFormat={(value) => marks.findIndex(mark => mark.value === value) + 1}\r\n            getAriaValueText={(value) => `${value}`}\r\n            aria-labelledby=\"discrete-slider-restrict\"\r\n            step={1}\r\n            min={0}\r\n            max={props.dates.length - 2}\r\n            valueLabelDisplay=\"auto\"\r\n            marks={marks}\r\n            onChange={props.onChange}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nvar dates = ['1/27/2020', '2/3/2020', '2/10/2020', '2/17/2020', '2/24/2020', '3/2/2020', '3/9/2020', '3/16/2020', '3/23/2020', '3/30/2020', '4/6/2020', '4/13/2020', '4/20/2020', '4/27/2020', '5/4/2020', '5/11/2020', '5/18/2020', '5/25/2020', '6/1/2020', '6/8/2020', '6/15/2020', '6/22/2020', '6/29/2020', '7/6/2020', '7/13/2020', '7/20/2020', '7/27/2020', '8/3/2020', '8/10/2020', '8/17/2020', '8/24/2020', '8/31/2020', '9/7/2020', '9/14/2020']\r\n\r\nconst ThemeContext = React.createContext(0);\r\n\r\nexport { dates, ThemeContext };","var styles = [\r\n    {\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#242f3e\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#746855\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"elementType\": \"labels.text.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#242f3e\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"administrative.country\",\r\n      \"elementType\": \"geometry.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#1f4272\"\r\n        },\r\n        {\r\n          \"weight\": 3\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"administrative.land_parcel\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"administrative.locality\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#d59563\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"administrative.neighborhood\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"administrative.province\",\r\n      \"elementType\": \"geometry.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#1f4272\"\r\n        },\r\n        {\r\n          \"lightness\": 45\r\n        },\r\n        {\r\n          \"weight\": 2\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"landscape.man_made\",\r\n      \"elementType\": \"labels.icon\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"landscape.man_made\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"landscape.natural\",\r\n      \"elementType\": \"labels.icon\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"landscape.natural\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#d59563\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.attraction\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.business\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.government\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.medical\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.park\",\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#263c3f\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.park\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#6b9a76\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.place_of_worship\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.school\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.sports_complex\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#38414e\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"geometry.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#212a37\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"labels\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"labels.icon\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#9ca5b3\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.arterial\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.highway\",\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#746855\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.highway\",\r\n      \"elementType\": \"geometry.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#1f2835\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.highway\",\r\n      \"elementType\": \"labels\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.highway\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#f3d19c\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.local\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"transit\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"transit\",\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#2f3948\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"transit.station\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#d59563\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#17263c\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#515c6d\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"labels.text.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#17263c\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n\r\nexport default styles;","import React from \"react\";\r\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, Circle } from \"react-google-maps\";\r\nimport MuiSlider from \"./MuiSlider.js\";\r\nimport { dates } from \"../data/data.js\";\r\n\r\nimport styles from './GoogleMapsStyles.js';\r\n\r\nconst test_country_data = [[\"United States\", 37.090240, -95.712891, 203], [\"Canada\", 56.130367, -106.346771, 1234]]\r\nfunction numDigits(number) {\r\n  return number.toString().length;\r\n}\r\n\r\nfunction MapSetUp() {\r\n  return (\r\n    <GoogleMap \r\n      defaultZoom={5} \r\n      defaultCenter={{ lat: 37.871593, lng: -122.272743}}\r\n      defaultOptions={{\r\n        styles: styles\r\n      }}\r\n      >\r\n      {test_country_data.map((country) => (\r\n        <Marker \r\n          key={country[0]} \r\n          position = {{\r\n            lat: country[1],\r\n            lng: country[2]\r\n          }}\r\n          label={{\r\n            color: '#1f4272',\r\n            strokeColor: '#ff0200',\r\n            strokeWeight: 1,\r\n            fontWeight: 'bold',\r\n            fontSize: '12px',\r\n            text: String(country[3]),\r\n          }}\r\n        />\r\n      ))}\r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(MapSetUp));\r\n\r\nexport default function Map() { \r\n    return (\r\n        <div>\r\n          <WrappedMap \r\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `84vh`}} />}\r\n          mapElement={<div style={{ height: `84vh`, }} />}\r\n        />\r\n          <MuiSlider dates={dates}\r\n          onChange={(event, newValue) => {\r\n            if (newValue !== this.state.week) {\r\n              this.setState({\r\n                week: newValue,\r\n                treemapData: this.getData(this.state.granularity, newValue)\r\n              })\r\n            }\r\n          }\r\n          }/>\r\n        </div>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport { curveCatmullRom } from 'd3-shape';\r\nimport Styled from \"styled-components\";\r\nimport { dates, ThemeContext } from '../data/data.js';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineSeries, MarkSeries, DiscreteColorLegend, Crosshair } from 'react-vis';\r\n\r\nexport default class Plotter extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.DATA = context.data;\r\n    this.dates = dates.slice();\r\n    this.dates.push('9/21/2020');\r\n    this.dates.push('9/28/2020');\r\n    this.state = {\r\n    };\r\n    this.toGraph = this.graph(this.props.granularity, this.props.query);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.granularity !== this.props.granularity) {\r\n      this.toGraph = this.graph(this.props.granularity, this.props.query);\r\n      console.log(\"updated\")\r\n    }\r\n\r\n  }\r\n\r\n  formatData = (granularity, query) => {\r\n    var data = this.DATA[granularity];\r\n    const graphData = [];\r\n    const lines = [];\r\n    for (let i = 0; i < data.length; i++) { // Each country\r\n      if (granularity === 0 || (granularity > 0 && query[query.length - 1].includes(data[i][0]))) {\r\n        var curr = []\r\n        for (let j = granularity + 3; j < data[i].length; j++) { // Each point in time for that country\r\n          curr.push({\r\n            x: j,\r\n            y: Math.log(parseInt(data[i][j]) + 1)\r\n          });\r\n        }\r\n        graphData.push(curr);\r\n        lines.push(data[i][granularity]);\r\n      }\r\n    }\r\n    return [lines, graphData];\r\n  }\r\n\r\n  graph = (granularity, query) => {\r\n    if (this.state.granularity === granularity) {\r\n      return\r\n    }\r\n    var formatted = this.formatData(granularity, query);\r\n\r\n    this.setState({\r\n      lines: formatted[0],\r\n    });\r\n    return formatted[1].map((series, i) =>\r\n      <LineSeries className=\"series\" key={i}\r\n        curve={curveCatmullRom.alpha(0.5)}\r\n        data={formatted[1][i]} />);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container spacing={0} justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={4}>\r\n          <Wrapper>\r\n            <XYPlot width={600} height={400} margin={{ left: 60, bottom: 60 }}>\r\n              <HorizontalGridLines style={{ stroke: '#B7E9ED' }} />\r\n              <VerticalGridLines style={{ stroke: '#B7E9ED' }} />\r\n              <XAxis\r\n                tickFormat={v => this.dates[v].slice(0, -5)} tickLabelAngle={-60}\r\n                title=\"Time (date by week)\"\r\n                style={{\r\n                  line: { stroke: '#ADDDE1' },\r\n                  ticks: { stroke: '#ADDDE1' },\r\n                  text: { stroke: 'none', fill: '#6b6b76', fontWeight: 600 }\r\n                }}\r\n              />\r\n              <YAxis title=\"COVID19 Cases in Region (Log)\" />\r\n\r\n              {this.toGraph}\r\n\r\n            </XYPlot>\r\n          </Wrapper>\r\n        </Grid>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={1}>\r\n          <DiscreteColorLegend height={350} width={100} items={this.state.lines ? this.state.lines : []} />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst Wrapper = Styled.section`\r\n.container{\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  font-family: Arial;\r\n  button{\r\n    all: unset;\r\n    width: 100px;\r\n    height: 35px;\r\n    margin: 10px 10px 0 0;\r\n    align-self: flex-end;\r\n    background-color: #0041C2;\r\n    color: #fff;\r\n    text-align: center;\r\n    border-radius: 3px;\r\n    border: 1px solid #0041C2;\r\n    &:hover{\r\n      background-color: #fff;\r\n      color: #0041C2;\r\n    }\r\n  }\r\n  >div{\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    font-size: 18px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .content{\r\n      display: flex;\r\n      flex-direction: column;\r\n      padding: 20px 100px;    \r\n      box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.2);\r\n      width: auto;\r\n  \r\n      img{\r\n        height: 150px;\r\n        width: 150px;\r\n        border-radius: 50%;\r\n      }\r\n  \r\n      >span:nth-child(2){\r\n        margin-top: 20px;\r\n        font-weight: bold;\r\n      }\r\n  \r\n      >span:not(:nth-child(2)){\r\n        margin-top: 8px;\r\n        font-size: 14px;\r\n      }\r\n  \r\n    }\r\n  }\r\n}\r\n`;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Treemap } from 'react-vis';\r\nimport Button from '@material-ui/core/Button';\r\nimport MuiSlider from './MuiSlider.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Plot from './Plot.js';\r\n\r\nimport { dates, ThemeContext } from '../data/data.js';\r\n\r\nvar countryData = [\r\n  ['North America', 'United States', '30', '50'],\r\n  ['North America', 'Canada', '20', '25'],\r\n  ['North America', 'Mexico', '10', '20'],\r\n  ['South America', 'Brazil', '5', '50'],\r\n  ['South America', 'Argentina', '10', '15'],\r\n  ['Asia', 'China', '10', '11']\r\n]\r\n\r\nvar continentData = [\r\n  ['North America', '60', '50'],\r\n  ['South America', '20', '25'],\r\n  ['Asia', '10', '20'],\r\n]\r\n\r\nvar DATA = [continentData, countryData]\r\nconst COLORS = ['#A7ADC6', '#8797AF', '#56667A', '#9098B6', '#788AA5', '#A9B5C6']\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass TreeMap extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.DATA = context.data;\r\n    this.DELTAS = [[], []];\r\n    for (var dataset = 0; dataset < 2; dataset++) {\r\n      for (var row = 0; row < this.DATA[dataset].length; row++) {\r\n        // Add Continent, Country\r\n        this.DELTAS[dataset].push([this.DATA[dataset][row][dataset]]);\r\n        if (dataset === 1) {\r\n          this.DELTAS[dataset][row].unshift([this.DATA[dataset][row][0]]);\r\n        }\r\n        // Calculate deltas\r\n        for (var col = 4 + dataset; col < this.DATA[dataset][row].length; col++) {\r\n          var curr = this.DATA[dataset][row][col] - this.DATA[dataset][row][col - 1];\r\n          var res = 1;\r\n          if (curr === 0) {\r\n            res = 0;\r\n          } else if (this.DATA[dataset][row][col - 1] === \"0\") {\r\n            res = 1;\r\n          } else {\r\n            res = Math.round(curr / this.DATA[dataset][row][col - 1] * 100) / 100;\r\n          }\r\n          this.DELTAS[dataset][row].push(res);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(this.DELTAS);\r\n    this.state = {\r\n      hoveredNode: false,\r\n      treemapData: this.getData(0, 0),\r\n      useCirclePacking: false,\r\n      granularity: 0,\r\n      query: [],\r\n      week: 0,\r\n    };\r\n  }\r\n\r\n  _getColor = () => {\r\n    return COLORS[Math.floor(Math.random() * COLORS.length)];\r\n  }\r\n\r\n  //Granularity: 0: Continent, 1: Country\r\n  getData = (granularity, week) => {\r\n    var data = this.state ? this.DELTAS[granularity] : this.DELTAS[0];\r\n    const leaves = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (granularity === 0 || (granularity > 0 && this.state.query[this.state.query.length - 1].includes(data[i][0]))) {\r\n        var cases = data[i][1 + granularity + week];\r\n\r\n        if (cases == null || cases === 0 || cases === \"0\") {\r\n          continue;\r\n        }\r\n\r\n        leaves.push({\r\n          name: data[i][granularity] + ' (' + cases + ')',\r\n          size: Math.log(cases + 1) + 0.2,\r\n          color: this._getColor(),\r\n          style: {\r\n            border: 'thin solid blue'\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return {\r\n      title: '',\r\n      color: this._getColor(),\r\n      children: leaves\r\n    };\r\n  }\r\n\r\n  changeData = (delta, hoveredNode) => {\r\n    // Validate delta\r\n    if ((delta < 0 && this.state.granularity === 0) || (delta > 0 && this.state.granularity === this.DELTAS.length - 1)) {\r\n      return;\r\n    }\r\n\r\n    // Adjust query\r\n    if (delta > 0 && hoveredNode) {\r\n      this.state.query.push(hoveredNode.data.name);\r\n    } else {\r\n      this.state.query.pop();\r\n    }\r\n\r\n    // Increment the state variables for the new delta\r\n    this.setState((prevState) => {\r\n      return {\r\n        granularity: prevState.granularity + delta,\r\n        treemapData: this.getData(prevState.granularity + delta, prevState.week),\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { hoveredNode, useCirclePacking } = this.state;\r\n    const treeProps = {\r\n      animation: {\r\n        damping: 9,\r\n        stiffness: 300\r\n      },\r\n      data: this.state.treemapData,\r\n      onLeafMouseOver: x => this.setState({ hoveredNode: x }),\r\n      onLeafMouseOut: () => this.setState({ hoveredNode: false }),\r\n      onLeafClick: () => this.changeData(1, hoveredNode),\r\n      height: 500,\r\n      mode: this.state.useCirclePacking ? 'circlePack' : 'squarify',\r\n      getLabel: x => x.name,\r\n      width: 600\r\n    };\r\n    return (\r\n      <div className=\"treemap\">\r\n        <MuiSlider dates={dates}\r\n          onChange={(event, newValue) => {\r\n            if (newValue !== this.state.week) {\r\n              this.setState({\r\n                week: newValue,\r\n                treemapData: this.getData(this.state.granularity, newValue)\r\n              })\r\n            }\r\n          }\r\n          } />\r\n        <br />\r\n        <Grid container spacing={0} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={4}>\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} style={{ marginLeft: '100px' }}\r\n              onClick={() => this.changeData(-1, null)} disabled={this.state.granularity === 0}\r\n            >Back</Button>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} style={{ float: 'center' }}\r\n              onClick={() => this.setState({ useCirclePacking: !useCirclePacking })}\r\n            >{this.state.useCirclePacking ? \"Square View\" : \"Circle View\"}</Button>\r\n\r\n            <Treemap {...treeProps} colorType='literal' sortFunction={(a, b) => b.value - a.value} />\r\n            \r\n          </Grid>\r\n          <Grid item xs={1} />\r\n          <Grid item xs={7}>\r\n            <Plot granularity={this.state.granularity} query={this.state.query} />\r\n          </Grid>\r\n\r\n        </Grid>\r\n        The rectangle plot illustrates regions where COVID is spreading the fastest. Rectangle size is correlated with the rate of increase of cases between weeks. \r\n        \r\n        <br /><br />\r\n        The right graph shows the total cummulative cases over time.\r\n        <br /><br />\r\n        Panel Data taken from: CSSEGISandData (JHU)\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TreeMap);","import React from \"react\";\r\nimport {\r\n  Route,\r\n  HashRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nimport Notfound from \"./notfound.js\";\r\nimport Map from '../pages/Map.js';\r\nimport Plot from '../pages/Plot.js';\r\nimport TreeMap from '../pages/TreeMap.js';\r\n\r\nclass Routing extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"Router\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={TreeMap} />\r\n            <Route component={Notfound} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Papa from 'papaparse';\r\n\r\nimport Routing from './router/Routing.js';\r\nimport {\r\n  HashRouter as Router,\r\n  NavLink\r\n} from \"react-router-dom\";\r\n\r\nimport { ThemeContext } from './data/data.js';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.DATA = [];\r\n    this.state = {\r\n      loaded: false\r\n    }\r\n    Papa.parse('https://raw.githubusercontent.com/matthew29tang/covid-track/master/src/data/continent-data.csv', {\r\n      download: true,\r\n      complete: (continent) => {\r\n        Papa.parse('https://raw.githubusercontent.com/matthew29tang/covid-track/master/src/data/country-data.csv', {\r\n          download: true,\r\n          complete: (country) => {\r\n            this.DATA.push(continent.data.slice(1));\r\n            this.DATA.push(country.data.slice(1));\r\n            this.setState({ loaded: true });\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <ThemeContext.Provider value={{\r\n        data: this.DATA\r\n      }}>\r\n        <div className=\"App\" style={{ backgroundColor: \"#F6F6F6\", paddingBottom: 20 }} >\r\n          <AppBar position=\"static\" >\r\n            <Toolbar>\r\n              <Router>\r\n                <div style={{ flex: 1, fontSize: \"19px\" }}><NavLink activeClassName=\"active\" className=\"link\" to={\"/\"} type=\"menu\">CoVisualize</NavLink></div>\r\n                {/*\r\n                <NavLink activeClassName=\"active\" className=\"link\" to={\"/treemap/\"} type=\"menu\" style={{ marginRight: '10px' }}>\r\n                  <Button color=\"inherit\">Treemap</Button>\r\n                </NavLink> */}\r\n              </Router>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <br />\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <Box width=\"85%\" maxWidth={1500}>\r\n              {this.DATA.length > 0 ? <Routing /> : ''}\r\n            </Box>\r\n          </Grid>\r\n        </div>\r\n      </ThemeContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
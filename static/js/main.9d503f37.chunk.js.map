{"version":3,"sources":["router/notfound.js","pages/MuiSlider.js","data/data.js","pages/Plot.js","pages/TreeMap.js","pages/additional/GoogleMapsStyles.js","pages/additional/Map.js","pages/additional/config.js","pages/additional/PlotMap.js","pages/additional/Graphs.js","pages/additional/USGraphs.js","pages/additional/About.js","router/Routing.js","App.js","serviceWorker.js","index.js"],"names":["Notfound","useStyles","makeStyles","theme","root","width","margin","height","spacing","body","fontWeight","fontSize","paddingLeft","paddingRight","MuiSlider","props","classes","marks","dates","i","length","push","value","label","slice","getMarks","Grid","container","direction","alignItems","justify","Box","Typography","id","gutterBottom","className","question","Slider","defaultValue","valueLabelFormat","findIndex","mark","getAriaValueText","aria-labelledby","step","min","max","valueLabelDisplay","onChange","ThemeContext","React","createContext","Plotter","context","formatData","granularity","query","data","DATA","graphData","lines","includes","curr","j","x","y","Math","log","parseInt","graph","state","formatted","setState","map","series","key","curve","curveCatmullRom","alpha","toGraph","prevProps","this","console","item","xs","Wrapper","left","bottom","style","stroke","tickFormat","v","tickLabelAngle","title","line","ticks","text","fill","items","Component","contextType","Styled","section","COLORS","TreeMap","_getColor","floor","random","getData","week","DELTAS","leaves","cases","name","size","color","border","children","changeData","delta","hoveredNode","pop","prevState","treemapData","dataset","row","unshift","col","res","round","useCirclePacking","treeProps","animation","damping","stiffness","onLeafMouseOver","onLeafMouseOut","onLeafClick","mode","getLabel","event","newValue","Button","variant","button","marginLeft","onClick","disabled","float","colorType","sortFunction","a","b","withStyles","styles","withScriptjs","withGoogleMap","defaultZoom","zoom","defaultCenter","center","defaultOptions","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","scrollwheel","places","place","lat","lng","long","radius","numCases","options","fillColor","fillOpacity","strokeColor","strokeWeight","position","String","url","PlotMap","Papa","parse","download","complete","results","r","dataPoint","last","parseFloat","llast","googleMapURL","loadingElement","containerElement","mapElement","input","display","homeImage","flex","resizeMode","homeText","Graphs","extractUSRow","countryName","tempRow","usRow","stateRow","reduce","filter","extractRow","rows","usData","marginTop","orientation","USGraphs","stateName","graphStates","About","Divider","align","word-wrap","Routing","exact","path","component","App","loaded","continent","country","Provider","backgroundColor","paddingBottom","AppBar","Toolbar","textAlign","activeClassName","to","type","marginRight","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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f,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,WACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,uBACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,aACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,qBACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,OACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,OACf,YAAe,kBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,OACf,YAAe,SACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,OACf,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,OACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,gBACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,eACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,eACf,YAAe,kBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,eACf,YAAe,SACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,eACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,aACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,UACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,UACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,kBACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,QACf,YAAe,WACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,QACf,YAAe,cACf,QAAW,CACT,CACE,WAAc,SAIpB,CACE,YAAe,QACf,YAAe,mBACf,QAAW,CACT,CACE,MAAS,aAIf,CACE,YAAe,QACf,YAAe,qBACf,QAAW,CACT,CACE,MAAS,cCxVnB,IAsDeC,yBAAaC,yBAtDhB,SAAA7I,GACV,OACE,kBAAC,YAAD,CACE8I,YAAa9I,EAAM+I,KACnBC,cAAehJ,EAAMiJ,OACrBC,eAAgB,CACdC,kBAAkB,EAClBC,WAAW,EACXC,mBAAmB,EACnBC,cAAc,EACdC,aAAa,EACbZ,OAAQA,IAGT3I,EAAMwJ,OAAO9F,KAAI,SAAA+F,GAEhB,OADAtF,QAAQf,IAAIqG,GAEV,kBAAC,WAAD,CAAU7F,IAAK6F,EAAMvI,IACnB,kBAAC,SAAD,CACE8H,cAAe,CACbU,IAAKD,EAAMC,IACXC,IAAKF,EAAMG,MAGbC,QA7BKC,EA6BaL,EAAMK,SA5BpC3F,QAAQf,IAAI0G,EAAU3G,KAAKC,IAAI0G,IACxB,IAAQ3G,KAAKC,IAAI0G,IA4BZC,QAAS,CACPC,UAAW,UACXC,YAAa,GACbC,YAAa,UACbC,aAAc,KAIlB,kBAAC,SAAD,CACEC,SAAU,CACRV,IAAKD,EAAMC,IACXC,IAAKF,EAAMG,MAEbpJ,MAAO,CACL4F,MAAO,UACP8D,YAAa,UACbC,aAAc,EACdxK,WAAY,OACZC,SAAU,OACVqF,KAAMoF,OAAOZ,EAAMK,cAjDnC,IAAmBA,UCTbQ,EAAM,yJCoBNC,E,kDACJ,aAAe,IAAD,8BACZ,gBACK7H,KAAO,GAEZ8H,IAAKC,MAAMH,EAAK,CACdI,UAAU,EACVC,SAAU,SAACC,GAET,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQlI,KAAKrC,OAAQwK,IAAK,CAC5C,IAAIC,EAAY,GACZhE,EAAM8D,EAAQlI,KAAKmI,GACnBE,EAAOC,WAAWlE,EAAIrG,OAAO,GAAG,IAChCwK,EAAQD,WAAWlE,EAAIrG,OAAO,GAAG,IACrC,GAAmB,iBAARsK,GAAoBA,EAAO,EACpCD,EAAS,SAAeC,MACnB,MAAoB,iBAATE,GAAqBA,EAAQ,GAG7C,SAFAH,EAAS,SAAeG,EAK1BH,EAAS,GAASD,EAClBC,EAAS,MAAYhE,EAAI,GACzBgE,EAAS,QAAchE,EAAI,GAC3BgE,EAAS,IAAUE,WAAWlE,EAAI,IAClCgE,EAAS,KAAWE,WAAWlE,EAAI,IACnC,EAAKpE,KAAKpC,KAAKwK,OA1BT,E,qDAkCZ,OACE,6BACA,kBAAC,EAAD,CACE7B,OAAQ,CAAES,IAAK,GAAIC,KAAM,KACzBZ,KAAM,EACNS,OAAQtF,KAAKxB,KACbwI,aAAc,sFACdC,eAAgB,yBAAK1G,MAAO,CAAEjF,OAAO,UACrC4L,iBAAkB,yBAAK3G,MAAO,CAAEjF,OAAO,UACvC6L,WAAY,yBAAK5G,MAAO,CAAEjF,OAAO,YAEnC,6BAVA,0E,GApCgB2C,IAAMiD,WAsDbsD,eAtEA,SAAAtJ,GAAK,MAAK,CACvB6I,OAAQ,CACN1I,OAAQH,EAAMK,QAAQ,IAExB6L,MAAO,CACLC,QAAS,QAEXC,UAAW,CACTC,KAAM,EACNC,WAAY,WAEdC,SAAU,CACR/L,SAAU,OA0DC8I,CAAmB6B,GCrD5BqB,E,kDACJ,aAAe,IAAD,8BACZ,gBA2CFC,aAAe,SAACC,EAAalB,GAE3B,IADA,IAAI9D,EAAM,GACD1G,EAAI,EAAGA,EAAIwK,EAAQlI,KAAKrC,OAAQD,IACvC,GAAIwK,EAAQlI,KAAKtC,GAAG,KAAO0L,EAAa,CACtC,IAAIC,EAAUnB,EAAQlI,KAAKtC,GAAGK,QAC9BsL,EAAUA,EAAQrI,KAAI,SAAAT,GAAC,OAAII,SAASJ,MACpC6D,EAAIxG,KAAKyL,GAIb,IADA,IAAIC,EAAQ,GAT2B,WAU9B5L,GACP4L,EAAM1L,KAAKwG,EAAIpD,KAAI,SAAAuI,GAAQ,OAAIA,EAAS7L,MAAI8L,QAAO,SAAC1D,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,KAD7DrI,EAAI,EAAGA,EAAI0G,EAAI,GAAGzG,OAAQD,IAAM,EAAhCA,GAIT0G,EAAMkF,EAAMG,QAAO,SAAAlJ,GAAC,OAAIA,EAAI,OAE5B,IADA,IAAIgD,EAAQ,GACH7F,EAAI,EAAGA,EAAI0G,EAAIzG,OAAQD,IAC9B6F,EAAM3F,KAAK,CAAE2C,EAAG7C,EAAG8C,EAAG4D,EAAI1G,KAG5B,EAAKqD,UAAS,SAACkD,GAMb,OALAA,EAAUhD,OAAOrD,KAAK,CACpBwE,MAAOgH,EACP1D,UAAU,EACV1F,KAAMuD,IAED,CAAEtC,OAAQgD,EAAUhD,YAtEjB,EA0EdyI,WAAa,SAACN,EAAalB,GAEzB,IADA,IAAI9D,EAAM,KACD1G,EAAI,EAAGA,EAAIwK,EAAQlI,KAAKrC,OAAQD,IACvC,GAAIwK,EAAQlI,KAAKtC,GAAG,KAAO0L,EAAa,CAGtChF,GADAA,GADAA,EAAM8D,EAAQlI,KAAKtC,IACT+L,QAAO,SAAAlJ,GAAC,OAAIA,EAAI,QAChBS,KAAI,SAAAT,GAAC,OAAII,SAASJ,MAC5B,MAIJ,IADA,IAAIgD,EAAQ,GACH7F,EAAI,EAAGA,EAAI0G,EAAIzG,OAAQD,IAC9B6F,EAAM3F,KAAK,CAAE2C,EAAG7C,EAAG8C,EAAG4D,EAAI1G,KAE5B,EAAKqD,UAAS,SAACkD,GAMb,OALAA,EAAUhD,OAAOrD,KAAK,CACpBwE,MAAOgH,EACP1D,UAAU,EACV1F,KAAMuD,IAED,CAAEtC,OAAQgD,EAAUhD,YA5F7B,EAAKjB,KAAO,GACZ,EAAK2J,KAAO,GACZ,EAAK9I,MAAQ,CACXI,OAAQ,IAGV6G,IAAKC,MAAMH,EAAK,CACdI,UAAU,EACVC,SAAU,SAACC,GACT,EAAKyB,KAAOzB,EAAQlI,KAAK,GACzB,IAAK,IAAImI,EAAI,EAAGA,EAAID,EAAQlI,KAAKrC,OAAQwK,IAAK,CAC5C,IAAIC,EAAY,GACZhE,EAAM8D,EAAQlI,KAAKmI,GACnBE,EAAOC,WAAWlE,EAAIrG,OAAO,GAAG,IAChCwK,EAAQD,WAAWlE,EAAIrG,OAAO,GAAG,IACrC,GAAmB,iBAARsK,GAAoBA,EAAO,EACpCD,EAAS,SAAeC,MACnB,MAAoB,iBAATE,GAAqBA,EAAQ,GAG7C,SAFAH,EAAS,SAAeG,EAK1BH,EAAS,GAASD,EAClBC,EAAS,MAAYhE,EAAI,GACzBgE,EAAS,QAAchE,EAAI,GAC3BgE,EAAS,IAAUE,WAAWlE,EAAI,IAClCgE,EAAS,KAAWE,WAAWlE,EAAI,IACnC,EAAKpE,KAAKpC,KAAKwK,GAGjB,EAAKwB,OAAS,GAEd,EAAKF,WAAW,QAASxB,GACzB,EAAKwB,WAAW,OAAQxB,GACxB,EAAKwB,WAAW,QAASxB,GACzB,EAAKiB,aAAa,KAAMjB,GACxB,EAAKwB,WAAW,UAAWxB,MAvCnB,E,qDAmGZ,OACE,gCACE,wBAAInG,MAAO,CAAE8H,UAAW,IAAxB,4BACA,kBAAC,IAAD,CACEhN,OAAQ,CAAEgF,KAAM,IAChBjF,MAAO,KACPE,OAAQ,KAER,kBAAC,IAAD,MACA,kBAAC,IAAD,MAEC0E,KAAKX,MAAMI,OAAOD,KAAI,SAAAC,GACrB,OAAO,kBAAC,IAAD,CACLjB,KAAMiB,EAAOjB,UAGjB,kBAAC,IAAD,CAAOoC,MAAO,uCACd,kBAAC,IAAD,CAAOA,MAAO,oBACd,kBAAC,IAAD,CACExF,MAAO,IACP6F,MAAOjB,KAAKX,MAAMI,OAClB6I,YAAY,gBAGhB,6BAAM,6BAvBR,0E,GArGerK,IAAMiD,WAoIZsD,eArJA,SAAAtJ,GAAK,MAAK,CACvB6I,OAAQ,CACN1I,OAAQH,EAAMK,QAAQ,IAExB6L,MAAO,CACLC,QAAS,QAEXC,UAAW,CACTC,KAAM,EACNC,WAAY,WAEdC,SAAU,CACR/L,SAAU,OAyIC8I,CAAmBkD,GCpI5Ba,E,kDACJ,aAAe,IAAD,8BACZ,gBAyCFZ,aAAe,SAACa,EAAW9B,GAEzB,IADA,IAAI9D,EAAM,GACD1G,EAAI,EAAGA,EAAIwK,EAAQlI,KAAKrC,OAAQD,IACvC,GAAIwK,EAAQlI,KAAKtC,GAAG,KAAOsM,EAAW,CACpC,IAAIX,EAAUnB,EAAQlI,KAAKtC,GAAGK,QAC9BsL,EAAUA,EAAQrI,KAAI,SAAAT,GAAC,OAAII,SAASJ,MACpC6D,EAAIxG,KAAKyL,GAIb,IADA,IAAIC,EAAQ,GATyB,WAU5B5L,GACP4L,EAAM1L,KAAKwG,EAAIpD,KAAI,SAAAuI,GAAQ,OAAIA,EAAS7L,MAAI8L,QAAO,SAAC1D,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,KAD7DrI,EAAI,GAAIA,EAAI0G,EAAI,GAAGzG,OAAQD,IAAM,EAAjCA,GAIT0G,EAAMkF,EAAMG,QAAO,SAAAlJ,GAAC,OAAIA,EAAI,OAE5B,IADA,IAAIgD,EAAQ,GACH7F,EAAI,EAAGA,EAAI0G,EAAIzG,OAAQD,IAC9B6F,EAAM3F,KAAK,CAAE2C,EAAG7C,EAAG8C,EAAG4D,EAAI1G,KAG5B,EAAKqD,UAAS,SAACkD,GAMb,OALAA,EAAUhD,OAAOrD,KAAK,CACpBwE,MAAO4H,EACPtE,UAAU,EACV1F,KAAMuD,IAED,CAAEtC,OAAQgD,EAAUhD,YAlE7B,EAAKjB,KAAO,GACZ,EAAK2J,KAAO,GACZ,EAAK9I,MAAQ,CACXI,OAAQ,IAEV,EAAKgJ,YAAc,CAAC,WAAY,aAAc,gBAAiB,aAAc,cAE7EnC,IAAKC,MH7BK,qJG6BQ,CAChBC,UAAU,EACVC,SAAU,SAACC,GACTzG,QAAQf,IAAIwH,EAAQlI,MACpB,EAAK2J,KAAOzB,EAAQlI,KAAK,GACzB,IAAK,IAAImI,EAAI,EAAGA,EAAID,EAAQlI,KAAKrC,OAAQwK,IAAK,CAC5C,IAAIC,EAAY,GACZhE,EAAM8D,EAAQlI,KAAKmI,GACnBE,EAAOC,WAAWlE,EAAIrG,OAAO,GAAG,IAChCwK,EAAQD,WAAWlE,EAAIrG,OAAO,GAAG,IACrC,GAAmB,iBAARsK,GAAoBA,EAAO,EACpCD,EAAS,SAAeC,MACnB,MAAoB,iBAATE,GAAqBA,EAAQ,GAG7C,SAFAH,EAAS,SAAeG,EAK1BH,EAAS,GAASD,EAClBC,EAAS,MAAYhE,EAAI,GACzBgE,EAAS,QAAchE,EAAI,GAC3BgE,EAAS,IAAUE,WAAWlE,EAAI,IAClCgE,EAAS,KAAWE,WAAWlE,EAAI,IACnC,EAAKpE,KAAKpC,KAAKwK,GAGjB,EAAK6B,YAAYjJ,KAAI,SAAAgJ,GAAS,OAAI,EAAKb,aAAaa,EAAW9B,SAnCvD,E,qDAyEZ,OACE,gCACE,wBAAInG,MAAO,CAAE8H,UAAW,IAAxB,4BACA,kBAAC,IAAD,CACEhN,OAAQ,CAAEgF,KAAM,IAChBjF,MAAO,KACPE,OAAQ,KAER,kBAAC,IAAD,MACA,kBAAC,IAAD,MAEC0E,KAAKX,MAAMI,OAAOD,KAAI,SAAAC,GACrB,OAAO,kBAAC,IAAD,CACLjB,KAAMiB,EAAOjB,UAGjB,kBAAC,IAAD,CAAOoC,MAAO,sCACd,kBAAC,IAAD,CAAOA,MAAO,oBACd,kBAAC,IAAD,CACExF,MAAO,IACP6F,MAAOjB,KAAKX,MAAMI,OAClB6I,YAAY,gBAGhB,6BAAK,6BAvBP,0E,GA3EiBrK,IAAMiD,WA0GdsD,eA3HA,SAAAtJ,GAAK,MAAK,CACvB6I,OAAQ,CACN1I,OAAQH,EAAMK,QAAQ,IAExB6L,MAAO,CACLC,QAAS,QAEXC,UAAW,CACTC,KAAM,EACNC,WAAY,WAEdC,SAAU,CACR/L,SAAU,OA+GC8I,CAAmB+D,G,SC5FnBG,E,uKA9BX,OACE,yBAAKxL,UAAU,SACb,qCACA,kBAACyL,EAAA,EAAD,MACA,6BACA,yBAAKC,MAAM,OAAOC,YAAU,cAA5B,sXAGE,6BAAM,6BAHR,2hBAKE,6BAAM,6BALR,6cAOE,6BACA,iDACA,4BACE,iDACE,wBAAItI,MAAO,CAACyD,WAAW,QAAvB,sBACA,wBAAIzD,MAAO,CAACyD,WAAW,QAAvB,8CACA,wBAAIzD,MAAO,CAACyD,WAAW,QAAvB,4BACF,qDACE,wBAAIzD,MAAO,CAACyD,WAAW,QAAvB,mC,GAvBM/F,IAAMiD,WC6BX4H,E,uKAjBX,OACE,kBAAC,IAAD,KACE,yBAAK5L,UAAU,UACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6L,OAAK,EAACC,KAAK,IAAIC,UAAW1H,IACjC,kBAAC,IAAD,CAAOyH,KAAK,OAAOC,UAAW5C,IAC9B,kBAAC,IAAD,CAAO2C,KAAK,gBAAgBC,UAAWvB,IACvC,kBAAC,IAAD,CAAOsB,KAAK,YAAYC,UAAWV,IACnC,kBAAC,IAAD,CAAOS,KAAK,SAASC,UAAWP,IAChC,kBAAC,IAAD,CAAOO,UAAWlO,W,GAXRkD,IAAMiD,WCwEbgI,E,kDAnEb,aAAe,IAAD,8BACZ,gBACKzK,KAAO,GACZ,EAAKY,MAAQ,CACX8J,QAAQ,GAEV7C,IAAKC,MAAM,iGAAkG,CAC3GC,UAAU,EACVC,SAAU,SAAC2C,GACT9C,IAAKC,MAAM,+FAAgG,CACzGC,UAAU,EACVC,SAAU,SAAC4C,GACT,EAAK5K,KAAKrC,KAAKgN,EAAU5K,KAAKjC,MAAM,IACpC,EAAKkC,KAAKrC,KAAKiN,EAAQ7K,KAAKjC,MAAM,IAClC,EAAKgD,SAAS,CAAE4J,QAAQ,UAdpB,E,qDAqBZ,OACE,kBAACnL,EAAasL,SAAd,CAAuBjN,MAAO,CAC5BmC,KAAMwB,KAAKvB,OAEX,yBAAKvB,UAAU,MAAMqD,MAAO,CAAEgJ,gBAAiB,UAAWC,cAAe,KACvE,kBAACC,EAAA,EAAD,CAAQvD,SAAS,UACf,kBAACwD,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKnJ,MAAO,CAAEgH,KAAM,EAAG7L,SAAU,OAAQiO,UAAW,SAAU,kBAAC,IAAD,CAASC,gBAAgB,SAAS1M,UAAU,OAAO2M,GAAI,IAAKC,KAAK,QAAjE,gBAE9D,kBAAC,IAAD,CAASF,gBAAgB,SAAS1M,UAAU,OAAO2M,GAAI,IAAKC,KAAK,OAAOvJ,MAAO,CAAEwJ,YAAa,SAC5F,kBAAClG,EAAA,EAAD,CAAQ3B,MAAM,WAAd,cAEF,kBAAC,IAAD,CAAS0H,gBAAgB,SAAS1M,UAAU,OAAO2M,GAAI,QAASC,KAAK,OAAOvJ,MAAO,CAAEwJ,YAAa,SAChG,kBAAClG,EAAA,EAAD,CAAQ3B,MAAM,WAAd,QAEF,kBAAC,IAAD,CAAS0H,gBAAgB,SAAS1M,UAAU,OAAO2M,GAAI,iBAAkBC,KAAK,OAAOvJ,MAAO,CAAEwJ,YAAa,SACzG,kBAAClG,EAAA,EAAD,CAAQ3B,MAAM,WAAd,iBAEF,kBAAC,IAAD,CAAS0H,gBAAgB,SAAS1M,UAAU,OAAO2M,GAAI,aAAcC,KAAK,OAAOvJ,MAAO,CAAEwJ,YAAa,SACrG,kBAAClG,EAAA,EAAD,CAAQ3B,MAAM,WAAd,aAEF,kBAAC,IAAD,CAAS0H,gBAAgB,SAAS1M,UAAU,OAAO2M,GAAI,UAAWC,KAAK,OAAOvJ,MAAO,CAAEwJ,YAAa,SAClG,kBAAClG,EAAA,EAAD,CAAQ3B,MAAM,WAAd,aAKR,6BACA,kBAACzF,EAAA,EAAD,CACEC,WAAS,EACTnB,QAAS,EACToB,UAAU,SACVC,WAAW,SACXC,QAAQ,UAER,kBAACC,EAAA,EAAD,CAAK1B,MAAM,MAAM4O,SAAU,MACxBhK,KAAKvB,KAAKtC,OAAS,EAAI,kBAAC,EAAD,MAAc,W,GA3DlC8B,IAAMiD,WCNJ+I,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9d503f37.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Notfound = () => <h1>Not found</h1>;\r\n\r\nexport default Notfound","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 300,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n  body: {\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    paddingLeft: 70,\r\n    paddingRight: 70,\r\n  },\r\n}));\r\n\r\nfunction getMarks(dates) {\r\n  var marks = [];\r\n  for (var i = 0; i < dates.length - 1; i++) {\r\n      marks.push({\r\n        value: i,\r\n        label: (i % 2 === 0  ? dates[i + 1].slice(0, -5) : '')\r\n      });\r\n  }\r\n  return marks;\r\n}\r\n\r\nexport default function MuiSlider(props) {\r\n  const classes = useStyles();\r\n  const marks = getMarks(props.dates);\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <Box width=\"75%\">\r\n          <Typography id=\"discrete-slider-restrict\" gutterBottom className={classes.body}>\r\n            {props.question}\r\n          </Typography>\r\n          <Slider\r\n            defaultValue={0}\r\n            valueLabelFormat={(value) => marks.findIndex(mark => mark.value === value) + 1}\r\n            getAriaValueText={(value) => `${value}`}\r\n            aria-labelledby=\"discrete-slider-restrict\"\r\n            step={1}\r\n            min={0}\r\n            max={props.dates.length - 2}\r\n            valueLabelDisplay=\"auto\"\r\n            marks={marks}\r\n            onChange={props.onChange}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nvar dates = ['1/27/2020', '2/3/2020', '2/10/2020', '2/17/2020', '2/24/2020', '3/2/2020', '3/9/2020', '3/16/2020', '3/23/2020', '3/30/2020', '4/6/2020', '4/13/2020', '4/20/2020', '4/27/2020', '5/4/2020', '5/11/2020', '5/18/2020', '5/25/2020', '6/1/2020', '6/8/2020', '6/15/2020', '6/22/2020', '6/29/2020', '7/6/2020', '7/13/2020', '7/20/2020', '7/27/2020', '8/3/2020', '8/10/2020', '8/17/2020', '8/24/2020', '8/31/2020', '9/7/2020', '9/14/2020']\r\n\r\nconst ThemeContext = React.createContext(0);\r\n\r\nexport { dates, ThemeContext };","import React from 'react';\r\nimport { curveCatmullRom } from 'd3-shape';\r\nimport Styled from \"styled-components\";\r\nimport { dates, ThemeContext } from '../data/data.js';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineSeries, DiscreteColorLegend } from 'react-vis';\r\n\r\nexport default class Plotter extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.DATA = context.data;\r\n    this.dates = dates.slice();\r\n    this.dates.push('9/21/2020');\r\n    this.dates.push('9/28/2020');\r\n    this.state = {\r\n    };\r\n    this.toGraph = this.graph(this.props.granularity, this.props.query);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.granularity !== this.props.granularity) {\r\n      this.toGraph = this.graph(this.props.granularity, this.props.query);\r\n      console.log(\"updated\")\r\n    }\r\n\r\n  }\r\n\r\n  formatData = (granularity, query) => {\r\n    var data = this.DATA[granularity];\r\n    const graphData = [];\r\n    const lines = [];\r\n    for (let i = 0; i < data.length; i++) { // Each country\r\n      if (granularity === 0 || (granularity > 0 && query[query.length - 1].includes(data[i][0]))) {\r\n        var curr = []\r\n        for (let j = granularity + 3; j < data[i].length; j++) { // Each point in time for that country\r\n          curr.push({\r\n            x: j,\r\n            y: Math.log(parseInt(data[i][j]) + 1)\r\n          });\r\n        }\r\n        graphData.push(curr);\r\n        lines.push(data[i][granularity]);\r\n      }\r\n    }\r\n    return [lines, graphData];\r\n  }\r\n\r\n  graph = (granularity, query) => {\r\n    if (this.state.granularity === granularity) {\r\n      return\r\n    }\r\n    var formatted = this.formatData(granularity, query);\r\n\r\n    this.setState({\r\n      lines: formatted[0],\r\n    });\r\n    return formatted[1].map((series, i) =>\r\n      <LineSeries className=\"series\" key={i}\r\n        curve={curveCatmullRom.alpha(0.5)}\r\n        data={formatted[1][i]} />);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container spacing={0} justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={4}>\r\n          <Wrapper>\r\n            <XYPlot width={600} height={400} margin={{ left: 60, bottom: 60 }}>\r\n              <HorizontalGridLines style={{ stroke: '#B7E9ED' }} />\r\n              <VerticalGridLines style={{ stroke: '#B7E9ED' }} />\r\n              <XAxis\r\n                tickFormat={v => this.dates[v].slice(0, -5)} tickLabelAngle={-60}\r\n                title=\"Time (date by week)\"\r\n                style={{\r\n                  line: { stroke: '#ADDDE1' },\r\n                  ticks: { stroke: '#ADDDE1' },\r\n                  text: { stroke: 'none', fill: '#6b6b76', fontWeight: 600 }\r\n                }}\r\n              />\r\n              <YAxis title=\"COVID19 Cases in Region (Log)\" />\r\n\r\n              {this.toGraph}\r\n\r\n            </XYPlot>\r\n          </Wrapper>\r\n        </Grid>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={1}>\r\n          <DiscreteColorLegend height={350} width={100} items={this.state.lines ? this.state.lines : []} />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst Wrapper = Styled.section`\r\n.container{\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  font-family: Arial;\r\n  button{\r\n    all: unset;\r\n    width: 100px;\r\n    height: 35px;\r\n    margin: 10px 10px 0 0;\r\n    align-self: flex-end;\r\n    background-color: #0041C2;\r\n    color: #fff;\r\n    text-align: center;\r\n    border-radius: 3px;\r\n    border: 1px solid #0041C2;\r\n    &:hover{\r\n      background-color: #fff;\r\n      color: #0041C2;\r\n    }\r\n  }\r\n  >div{\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    font-size: 18px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    .content{\r\n      display: flex;\r\n      flex-direction: column;\r\n      padding: 20px 100px;    \r\n      box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.2);\r\n      width: auto;\r\n  \r\n      img{\r\n        height: 150px;\r\n        width: 150px;\r\n        border-radius: 50%;\r\n      }\r\n  \r\n      >span:nth-child(2){\r\n        margin-top: 20px;\r\n        font-weight: bold;\r\n      }\r\n  \r\n      >span:not(:nth-child(2)){\r\n        margin-top: 8px;\r\n        font-size: 14px;\r\n      }\r\n  \r\n    }\r\n  }\r\n}\r\n`;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Treemap } from 'react-vis';\r\nimport Button from '@material-ui/core/Button';\r\nimport MuiSlider from './MuiSlider.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Plot from './Plot.js';\r\nimport { dates, ThemeContext } from '../data/data.js';\r\n\r\nconst COLORS = ['#A7ADC6', '#8797AF', '#56667A', '#9098B6', '#788AA5', '#A9B5C6']\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n});\r\n\r\nclass TreeMap extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.DATA = context.data;\r\n    this.DELTAS = [[], []];\r\n    for (var dataset = 0; dataset < 2; dataset++) {\r\n      for (var row = 0; row < this.DATA[dataset].length; row++) {\r\n        // Add Continent, Country\r\n        this.DELTAS[dataset].push([this.DATA[dataset][row][dataset]]);\r\n        if (dataset === 1) {\r\n          this.DELTAS[dataset][row].unshift([this.DATA[dataset][row][0]]);\r\n        }\r\n        // Calculate deltas\r\n        for (var col = 4 + dataset; col < this.DATA[dataset][row].length; col++) {\r\n          var curr = this.DATA[dataset][row][col] - this.DATA[dataset][row][col - 1];\r\n          var res = 1;\r\n          if (curr === 0) {\r\n            res = 0;\r\n          } else if (this.DATA[dataset][row][col - 1] === \"0\") {\r\n            res = 1;\r\n          } else {\r\n            res = Math.round(curr / this.DATA[dataset][row][col - 1] * 100) / 100;\r\n          }\r\n          this.DELTAS[dataset][row].push(res);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(this.DELTAS);\r\n    this.state = {\r\n      hoveredNode: false,\r\n      treemapData: this.getData(0, 0),\r\n      useCirclePacking: false,\r\n      granularity: 0,\r\n      query: [],\r\n      week: 0,\r\n    };\r\n  }\r\n\r\n  _getColor = () => {\r\n    return COLORS[Math.floor(Math.random() * COLORS.length)];\r\n  }\r\n\r\n  //Granularity: 0: Continent, 1: Country\r\n  getData = (granularity, week) => {\r\n    var data = this.state ? this.DELTAS[granularity] : this.DELTAS[0];\r\n    const leaves = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (granularity === 0 || (granularity > 0 && this.state.query[this.state.query.length - 1].includes(data[i][0]))) {\r\n        var cases = data[i][1 + granularity + week];\r\n\r\n        if (cases == null || cases === 0 || cases === \"0\") {\r\n          continue;\r\n        }\r\n\r\n        leaves.push({\r\n          name: data[i][granularity] + ' (' + cases + ')',\r\n          size: Math.log(cases + 1) + 0.2,\r\n          color: this._getColor(),\r\n          style: {\r\n            border: 'thin solid blue'\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return {\r\n      title: '',\r\n      color: this._getColor(),\r\n      children: leaves\r\n    };\r\n  }\r\n\r\n  changeData = (delta, hoveredNode) => {\r\n    // Validate delta\r\n    if ((delta < 0 && this.state.granularity === 0) || (delta > 0 && this.state.granularity === this.DELTAS.length - 1)) {\r\n      return;\r\n    }\r\n\r\n    // Adjust query\r\n    if (delta > 0 && hoveredNode) {\r\n      this.state.query.push(hoveredNode.data.name);\r\n    } else {\r\n      this.state.query.pop();\r\n    }\r\n\r\n    // Increment the state variables for the new delta\r\n    this.setState((prevState) => {\r\n      return {\r\n        granularity: prevState.granularity + delta,\r\n        treemapData: this.getData(prevState.granularity + delta, prevState.week),\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { hoveredNode, useCirclePacking } = this.state;\r\n    const treeProps = {\r\n      animation: {\r\n        damping: 9,\r\n        stiffness: 300\r\n      },\r\n      data: this.state.treemapData,\r\n      onLeafMouseOver: x => this.setState({ hoveredNode: x }),\r\n      onLeafMouseOut: () => this.setState({ hoveredNode: false }),\r\n      onLeafClick: () => this.changeData(1, hoveredNode),\r\n      height: 500,\r\n      mode: this.state.useCirclePacking ? 'circlePack' : 'squarify',\r\n      getLabel: x => x.name,\r\n      width: 600\r\n    };\r\n    return (\r\n      <div className=\"treemap\">\r\n        <MuiSlider dates={dates}\r\n          onChange={(event, newValue) => {\r\n            if (newValue !== this.state.week) {\r\n              this.setState({\r\n                week: newValue,\r\n                treemapData: this.getData(this.state.granularity, newValue)\r\n              })\r\n            }\r\n          }\r\n          } />\r\n          Use the slider to traverse through time.\r\n        <br />\r\n        <Grid container spacing={0} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={4}>\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} style={{ marginLeft: '100px' }}\r\n              onClick={() => this.changeData(-1, null)} disabled={this.state.granularity === 0}\r\n            >Back</Button>\r\n\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} style={{ float: 'center' }}\r\n              onClick={() => this.setState({ useCirclePacking: !useCirclePacking })}\r\n            >{this.state.useCirclePacking ? \"Square View\" : \"Circle View\"}</Button>\r\n\r\n            <Treemap {...treeProps} colorType='literal' sortFunction={(a, b) => b.value - a.value} />\r\n            \r\n          </Grid>\r\n          <Grid item xs={1} />\r\n          <Grid item xs={7}>\r\n            <Plot granularity={this.state.granularity} query={this.state.query} />\r\n          </Grid>\r\n\r\n        </Grid>\r\n        The rectangle plot illustrates regions where COVID is spreading the fastest. Rectangle size is correlated with the rate of increase of cases between weeks. \r\n        \r\n        <br /><br />\r\n        The right graph shows the total cummulative cases over time.\r\n        <br /><br />\r\n        Panel Data taken from: CSSEGISandData (JHU) [frozen as of 9/20/20]\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TreeMap);","var styles = [\r\n    {\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#242f3e\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#746855\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"elementType\": \"labels.text.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#242f3e\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"administrative.country\",\r\n      \"elementType\": \"geometry.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#1f4272\"\r\n        },\r\n        {\r\n          \"weight\": 3\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"administrative.land_parcel\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"administrative.locality\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#d59563\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"administrative.neighborhood\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"administrative.province\",\r\n      \"elementType\": \"geometry.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#1f4272\"\r\n        },\r\n        {\r\n          \"lightness\": 45\r\n        },\r\n        {\r\n          \"weight\": 2\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"landscape.man_made\",\r\n      \"elementType\": \"labels.icon\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"landscape.man_made\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"landscape.natural\",\r\n      \"elementType\": \"labels.icon\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"landscape.natural\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#d59563\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.attraction\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.business\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.government\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.medical\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.park\",\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#263c3f\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.park\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#6b9a76\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.place_of_worship\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.school\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"poi.sports_complex\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#38414e\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"geometry.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#212a37\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"labels\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"labels.icon\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#9ca5b3\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.arterial\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.highway\",\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#746855\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.highway\",\r\n      \"elementType\": \"geometry.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#1f2835\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.highway\",\r\n      \"elementType\": \"labels\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.highway\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#f3d19c\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"road.local\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"transit\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"transit\",\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#2f3948\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"transit.station\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#d59563\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"geometry\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#17263c\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [\r\n        {\r\n          \"visibility\": \"off\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#515c6d\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"labels.text.stroke\",\r\n      \"stylers\": [\r\n        {\r\n          \"color\": \"#17263c\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n\r\nexport default styles;","import React, { Fragment } from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  withScriptjs,\r\n  Marker,\r\n  Circle,\r\n} from \"react-google-maps\";\r\n\r\nimport styles from './GoogleMapsStyles.js';\r\n\r\nfunction getRadius(numCases) {\r\n  console.log(numCases, Math.log(numCases))\r\n  return 20000 * Math.log(numCases);\r\n}\r\n\r\nconst Map = props => {\r\n  return (\r\n    <GoogleMap\r\n      defaultZoom={props.zoom}\r\n      defaultCenter={props.center}\r\n      defaultOptions={{\r\n        disableDefaultUI: true, // disable default map UI\r\n        draggable: true, // make map draggable\r\n        keyboardShortcuts: false, // disable keyboard shortcuts\r\n        scaleControl: true, // allow scale controle\r\n        scrollwheel: true, // allow scroll wheel\r\n        styles: styles // change default map styles\r\n      }}\r\n    >\r\n      {props.places.map(place => {\r\n        console.log(place)\r\n        return (\r\n          <Fragment key={place.id}>\r\n            <Circle\r\n              defaultCenter={{\r\n                lat: place.lat,\r\n                lng: place.long\r\n              }}\r\n\r\n              radius={getRadius(place.numCases)}\r\n              options={{\r\n                fillColor: \"#ff0200\",\r\n                fillOpacity: 0.5,\r\n                strokeColor: '#740000',\r\n                strokeWeight: 3,\r\n              }}\r\n\r\n            />\r\n            <Marker\r\n              position={{\r\n                lat: place.lat,\r\n                lng: place.long\r\n              }}\r\n              label={{\r\n                color: '#1f4272',\r\n                strokeColor: '#ff0200',\r\n                strokeWeight: 1,\r\n                fontWeight: 'bold',\r\n                fontSize: '12px',\r\n                text: String(place.numCases),\r\n              }}\r\n            />\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\nexport default withScriptjs(withGoogleMap(Map));\r\n","const key = \"AIzaSyABaIcBNRACUSINOa47adbhY4jMwv2m68E\";\r\n\r\nconst url = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv';\r\n\r\nconst USurl = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv';\r\n\r\nexport {key, url, USurl};","import React from 'react';\r\nimport Map from './Map.js';\r\nimport Papa from 'papaparse';\r\nimport {key, url} from './config.js';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  homeImage: {\r\n    flex: 1,\r\n    resizeMode: 'contain',\r\n  },\r\n  homeText: {\r\n    fontSize: 20,\r\n  }\r\n});\r\n\r\nclass PlotMap extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.data = []\r\n\r\n    Papa.parse(url, {\r\n      download: true,\r\n      complete: (results) => {\r\n\r\n        for (var r = 1; r < results.data.length; r++) {\r\n          var dataPoint = {};\r\n          var row = results.data[r];\r\n          var last = parseFloat(row.slice(-1)[0]);\r\n          var llast = parseFloat(row.slice(-2)[0]);\r\n          if (typeof last == 'number' && last > 0) {\r\n            dataPoint['numCases'] = last;\r\n          } else if (typeof llast == 'number' && llast > 0) {\r\n            dataPoint['numCases'] = llast;\r\n          } else {\r\n            continue;\r\n          }\r\n\r\n          dataPoint['id'] = r;\r\n          dataPoint['state'] = row[0];\r\n          dataPoint['country'] = row[1];\r\n          dataPoint['lat'] = parseFloat(row[2]);\r\n          dataPoint['long'] = parseFloat(row[3]);\r\n          this.data.push(dataPoint);\r\n        }\r\n        \r\n     }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Map\r\n        center={{ lat: 40, lng: -100 }}\r\n        zoom={5}\r\n        places={this.data}\r\n        googleMapURL={'https://maps.googleapis.com/maps/api/js?key=' + key}\r\n        loadingElement={<div style={{ height: `100%` }} />}\r\n        containerElement={<div style={{ height: `80vh` }} />}\r\n        mapElement={<div style={{ height: `80vh` }} />}\r\n      />\r\n      <br/>\r\n      Panel Data taken from: CSSEGISandData (JHU) [Updates in real time]\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(PlotMap);\r\n\r\n","import React from 'react';\r\nimport Papa from 'papaparse';\r\nimport { url } from './config.js';\r\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineSeries, DiscreteColorLegend } from 'react-vis';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  homeImage: {\r\n    flex: 1,\r\n    resizeMode: 'contain',\r\n  },\r\n  homeText: {\r\n    fontSize: 20,\r\n  }\r\n});\r\n\r\n\r\nclass Graphs extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.data = []\r\n    this.rows = []\r\n    this.state = {\r\n      series: []\r\n    }\r\n\r\n    Papa.parse(url, {\r\n      download: true,\r\n      complete: (results) => {\r\n        this.rows = results.data[0];\r\n        for (var r = 1; r < results.data.length; r++) {\r\n          var dataPoint = {};\r\n          var row = results.data[r];\r\n          var last = parseFloat(row.slice(-1)[0]);\r\n          var llast = parseFloat(row.slice(-2)[0]);\r\n          if (typeof last == 'number' && last > 0) {\r\n            dataPoint['numCases'] = last;\r\n          } else if (typeof llast == 'number' && llast > 0) {\r\n            dataPoint['numCases'] = llast;\r\n          } else {\r\n            continue;\r\n          }\r\n\r\n          dataPoint['id'] = r;\r\n          dataPoint['state'] = row[0];\r\n          dataPoint['country'] = row[1];\r\n          dataPoint['lat'] = parseFloat(row[2]);\r\n          dataPoint['long'] = parseFloat(row[3]);\r\n          this.data.push(dataPoint);\r\n        }\r\n\r\n        this.usData = [];\r\n\r\n        this.extractRow(\"Italy\", results);\r\n        this.extractRow(\"Iran\", results);\r\n        this.extractRow(\"Spain\", results);\r\n        this.extractUSRow(\"US\", results);\r\n        this.extractRow(\"Germany\", results);\r\n      }\r\n    });\r\n  }\r\n\r\n  extractUSRow = (countryName, results) => {\r\n    var row = [];\r\n    for (let i = 0; i < results.data.length; i++) {\r\n      if (results.data[i][1] === countryName) {\r\n        var tempRow = results.data[i].slice();\r\n        tempRow = tempRow.map(x => parseInt(x));\r\n        row.push(tempRow);\r\n      }\r\n    }\r\n    var usRow = [];\r\n    for (let i = 4; i < row[0].length; i++) {\r\n      usRow.push(row.map(stateRow => stateRow[i]).reduce((a, b) => a + b, 0));\r\n    }\r\n\r\n    row = usRow.filter(x => x > 10000);\r\n    var cases = [];\r\n    for (let i = 0; i < row.length; i++) {\r\n      cases.push({ x: i, y: row[i] });\r\n    }\r\n\r\n    this.setState((prevState) => {\r\n      prevState.series.push({\r\n        title: countryName,\r\n        disabled: false,\r\n        data: cases\r\n      });\r\n      return { series: prevState.series }\r\n    });\r\n  }\r\n\r\n  extractRow = (countryName, results) => {\r\n    var row = null;\r\n    for (let i = 0; i < results.data.length; i++) {\r\n      if (results.data[i][1] === countryName) {\r\n        row = results.data[i];\r\n        row = row.filter(x => x > 10000);\r\n        row = row.map(x => parseInt(x));\r\n        break;\r\n      }\r\n    }\r\n    var cases = [];\r\n    for (let i = 0; i < row.length; i++) {\r\n      cases.push({ x: i, y: row[i] });\r\n    }\r\n    this.setState((prevState) => {\r\n      prevState.series.push({\r\n        title: countryName,\r\n        disabled: false,\r\n        data: cases\r\n      });\r\n      return { series: prevState.series }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <center>\r\n        <h2 style={{ marginTop: 0 }}> Cases vs Number of Days</h2>\r\n        <XYPlot\r\n          margin={{ left: 60 }}\r\n          width={1200}\r\n          height={500}>\r\n\r\n          <HorizontalGridLines />\r\n          <VerticalGridLines />\r\n\r\n          {this.state.series.map(series => {\r\n            return <LineSeries\r\n              data={series.data} />\r\n          })}\r\n\r\n          <XAxis title={\"Number of days after >10,000 cases\"} />\r\n          <YAxis title={\"Number of cases\"} />\r\n          <DiscreteColorLegend\r\n            width={500}\r\n            items={this.state.series}\r\n            orientation=\"horizontal\"\r\n          />\r\n        </XYPlot>\r\n        <br /><br />\r\n        Panel Data taken from: CSSEGISandData (JHU) [Updates in real time]\r\n      </center>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Graphs);\r\n\r\n","import React from 'react';\r\nimport Papa from 'papaparse';\r\nimport { USurl } from './config.js';\r\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineSeries, DiscreteColorLegend } from 'react-vis';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  homeImage: {\r\n    flex: 1,\r\n    resizeMode: 'contain',\r\n  },\r\n  homeText: {\r\n    fontSize: 20,\r\n  }\r\n});\r\n\r\n\r\nclass USGraphs extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.data = []\r\n    this.rows = []\r\n    this.state = {\r\n      series: []\r\n    }\r\n    this.graphStates = [\"New York\", \"New Jersey\", \"Massachusetts\", \"California\", \"Washington\"]\r\n\r\n    Papa.parse(USurl, {\r\n      download: true,\r\n      complete: (results) => {\r\n        console.log(results.data)\r\n        this.rows = results.data[0];\r\n        for (var r = 1; r < results.data.length; r++) {\r\n          var dataPoint = {};\r\n          var row = results.data[r];\r\n          var last = parseFloat(row.slice(-1)[0]);\r\n          var llast = parseFloat(row.slice(-2)[0]);\r\n          if (typeof last == 'number' && last > 0) {\r\n            dataPoint['numCases'] = last;\r\n          } else if (typeof llast == 'number' && llast > 0) {\r\n            dataPoint['numCases'] = llast;\r\n          } else {\r\n            continue;\r\n          }\r\n\r\n          dataPoint['id'] = r;\r\n          dataPoint['state'] = row[0];\r\n          dataPoint['country'] = row[1];\r\n          dataPoint['lat'] = parseFloat(row[2]);\r\n          dataPoint['long'] = parseFloat(row[3]);\r\n          this.data.push(dataPoint);\r\n        }\r\n\r\n        this.graphStates.map(stateName => this.extractUSRow(stateName, results));\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  extractUSRow = (stateName, results) => {\r\n    var row = [];\r\n    for (let i = 0; i < results.data.length; i++) {\r\n      if (results.data[i][6] === stateName) {\r\n        var tempRow = results.data[i].slice();\r\n        tempRow = tempRow.map(x => parseInt(x));\r\n        row.push(tempRow);\r\n      }\r\n    }\r\n    var usRow = [];\r\n    for (let i = 11; i < row[0].length; i++) {\r\n      usRow.push(row.map(stateRow => stateRow[i]).reduce((a, b) => a + b, 0));\r\n    }\r\n\r\n    row = usRow.filter(x => x > 1000);\r\n    var cases = [];\r\n    for (let i = 0; i < row.length; i++) {\r\n      cases.push({ x: i, y: row[i] });\r\n    }\r\n\r\n    this.setState((prevState) => {\r\n      prevState.series.push({\r\n        title: stateName,\r\n        disabled: false,\r\n        data: cases\r\n      });\r\n      return { series: prevState.series }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <center>\r\n        <h2 style={{ marginTop: 0 }}> Cases vs Number of Days</h2>\r\n        <XYPlot\r\n          margin={{ left: 60 }}\r\n          width={1200}\r\n          height={500}>\r\n\r\n          <HorizontalGridLines />\r\n          <VerticalGridLines />\r\n\r\n          {this.state.series.map(series => {\r\n            return <LineSeries\r\n              data={series.data} />\r\n          })}\r\n\r\n          <XAxis title={\"Number of days after >1,000 cases\"} />\r\n          <YAxis title={\"Number of cases\"} />\r\n          <DiscreteColorLegend\r\n            width={500}\r\n            items={this.state.series}\r\n            orientation=\"horizontal\"\r\n          />\r\n        </XYPlot>\r\n        <br/><br/>\r\n        Panel Data taken from: CSSEGISandData (JHU) [Updates in real time]\r\n      </center>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(USGraphs);\r\n\r\n","import React from 'react';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nclass About extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"About\">\r\n        <h1>About</h1>\r\n        <Divider />\r\n        <br />\r\n        <div align=\"left\" word-wrap=\"break-word\">\r\n          \r\n          As someone who studied epidemiology for 5 years in high school, the COVID-19 outbreak is surreal; I never thought I'd actually witness a pandemic. With my EECS background, I decided to design an innovative way to visualize COVID-19 cases. This project was envisioned in April 2020 and created at HackMIT 2020 in collaboration with Peter Zhu, Ryan Kee, and Christianna Xu.\r\n          <br /><br />\r\n          There are copious amounts of COVID data, but many existing visualizations have shortcomings. Our interactive visualization excels over traditional methods since users can easily draw conclusions from the multi-dimensional data grouped by varying levels of granularity (continent-level, country-level, etc.) over time. Existing visualizations are usually static x-y plots which fail to communicate more than 2 dimensions or 2d maps with dots which communicate locality but are difficult to interact with and do not show time-series data. \r\n          <br /><br />\r\n          Our visualization shows a rectangle plot proportional to the rate of increase of cases with a slider to monitor the progression over time. Users can click on each rectangle to see higher levels of granularity and return to previous plots at any time. This method allows for easy comparison to draw conclusions of emerging infection hot-spots. An additional 2d plot of active cases complements the rectangle plot by graphing cases over the entire time period.\r\n          <br />\r\n          <h2>Technologies used</h2>\r\n          <ul>\r\n            <li>Frontend: ReactJS</li>\r\n              <li style={{marginLeft:\"2em\"}}>Theme: Material UI</li>\r\n              <li style={{marginLeft:\"2em\"}}>Visualizations: React-vis (based on d3.js)</li>\r\n              <li style={{marginLeft:\"2em\"}}>Deployment: Github pages</li>\r\n            <li>Data curation: Python</li>\r\n              <li style={{marginLeft:\"2em\"}}>Libraries: pandas, numpy</li>\r\n             </ul>\r\n             \r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport {\r\n  Route,\r\n  HashRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nimport Notfound from \"./notfound.js\";\r\nimport TreeMap from '../pages/TreeMap.js';\r\nimport PlotMap from '../pages/additional/PlotMap.js';\r\nimport Graphs from '../pages/additional/Graphs.js';\r\nimport USGraphs from '../pages/additional/USGraphs.js';\r\nimport About from '../pages/additional/About.js';\r\n\r\nclass Routing extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"Router\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={TreeMap} />\r\n            <Route path=\"/map\" component={PlotMap} />\r\n            <Route path=\"/global-graph\" component={Graphs} />\r\n            <Route path=\"/us-graph\" component={USGraphs} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route component={Notfound} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Papa from 'papaparse';\r\n\r\nimport Routing from './router/Routing.js';\r\nimport {\r\n  HashRouter as Router,\r\n  NavLink\r\n} from \"react-router-dom\";\r\n\r\nimport { ThemeContext } from './data/data.js';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.DATA = [];\r\n    this.state = {\r\n      loaded: false\r\n    }\r\n    Papa.parse('https://raw.githubusercontent.com/matthew29tang/covid-track/master/src/data/continent-data.csv', {\r\n      download: true,\r\n      complete: (continent) => {\r\n        Papa.parse('https://raw.githubusercontent.com/matthew29tang/covid-track/master/src/data/country-data.csv', {\r\n          download: true,\r\n          complete: (country) => {\r\n            this.DATA.push(continent.data.slice(1));\r\n            this.DATA.push(country.data.slice(1));\r\n            this.setState({ loaded: true });\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <ThemeContext.Provider value={{\r\n        data: this.DATA\r\n      }}>\r\n        <div className=\"App\" style={{ backgroundColor: \"#F6F6F6\", paddingBottom: 20 }} >\r\n          <AppBar position=\"static\" >\r\n            <Toolbar>\r\n              <Router>\r\n                <div style={{ flex: 1, fontSize: \"19px\", textAlign: \"left\" }}><NavLink activeClassName=\"active\" className=\"link\" to={\"/\"} type=\"menu\">CoVisualize</NavLink></div>\r\n                \r\n                <NavLink activeClassName=\"active\" className=\"link\" to={\"/\"} type=\"menu\" style={{ marginRight: '10px' }}>\r\n                  <Button color=\"inherit\">Rect Plot</Button>\r\n                </NavLink>\r\n                <NavLink activeClassName=\"active\" className=\"link\" to={\"/map/\"} type=\"menu\" style={{ marginRight: '10px' }}>\r\n                  <Button color=\"inherit\">Map</Button>\r\n                </NavLink>\r\n                <NavLink activeClassName=\"active\" className=\"link\" to={\"/global-graph/\"} type=\"menu\" style={{ marginRight: '10px' }}>\r\n                  <Button color=\"inherit\">Global Graph</Button>\r\n                </NavLink> \r\n                <NavLink activeClassName=\"active\" className=\"link\" to={\"/us-graph/\"} type=\"menu\" style={{ marginRight: '10px' }}>\r\n                  <Button color=\"inherit\">US Graph</Button>\r\n                </NavLink>  \r\n                <NavLink activeClassName=\"active\" className=\"link\" to={\"/about/\"} type=\"menu\" style={{ marginRight: '10px' }}>\r\n                  <Button color=\"inherit\">About</Button>\r\n                </NavLink> \r\n              </Router>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <br />\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <Box width=\"85%\" maxWidth={1500}>\r\n              {this.DATA.length > 0 ? <Routing /> : ''}\r\n            </Box>\r\n          </Grid>\r\n        </div>\r\n      </ThemeContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}